import os
import sys

from cfg_building import CFGBuilder as CB
from feat_extraction import FeatureExtractor as FE
from ml import Model

from tqdm import tqdm

if __name__ == "__main__":
    CLASS_DICT = {'b_samples': 0, 'hmdjs6_samples': 1}

    if len(sys.argv) > 2:
        print(f"[STATUS] START reading dot files for {sys.argv[1]}\n")
        SAMPLE_DIR = sys.argv[1]
        SAMPLES_TYPE = SAMPLE_DIR.split('/')[-1] \
            if SAMPLE_DIR.split('/')[-1] != '' \
                else SAMPLE_DIR.split('/')[-2]

        file_idx = 0
        with open("misc/logs.txt", "w") as logger:
            for file_dir in tqdm(os.listdir(SAMPLES_TYPE), file=logger):
                # get file name
                file_name = file_dir[5:]

                # extract CFGs and features
                cb = CB('/'.join([SAMPLES_TYPE, file_dir, file_name]))
                fe = FE(cb.func_graph_dict)
                fe.export_features(file_name, CLASS_DICT[SAMPLES_TYPE], sys.argv[2])
                

    elif len(sys.argv) > 1:
        print("\n[STATUS] START Training\n")
        model = Model(sys.argv[1])
        model.score_features()
        model.select_features()
        model.train()
        model.evaluate()
