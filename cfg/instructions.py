"""
This module contains the classes required for instruction and
operand parsing
"""

from opcodes import OpCodeDict


class Inst(object):
    
    def __init__(self, inst_string):
        split_array = inst_string.split()
        self.inst = split_array[0]
        try:
            self.opcode = OpCodeDict.TABLE[self.inst]
        except KeyError:
            # print(f"OPCODEERR: {self.inst}")
            self.opcode = -1
    
    def __repr__(self):
        return self.inst + '#' + str(self.opcode)
    
    def __eq__(self, o):
        return self.opcode == o.opcode


class Operand(object):
    pass